{"version":3,"sources":["components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/ContactListItem/ContactListItem.js","App.js","index.js"],"names":["Filter","handleChangeFilter","filter","inputFilterID","shortid","htmlFor","id","name","type","value","onChange","ContactForm","inputNameID","inputNumberID","state","number","handleChangeName","e","setState","target","handleChangeNumber","handleSubmit","preventDefault","contact","props","searchDuplicate","this","onSubmit","pattern","title","tittle","placeholder","Component","ContactList","children","ContactListItem","contacts","deleteItem","map","onClick","toLowerCase","includes","App","addNewContact","obj","prevState","alert","itemId","item","localeContacts","JSON","parse","localStorage","getItem","setItem","stringify","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd115100.chunk.js","sourcesContent":["import shortid from 'shortid';\n\nexport const Filter = ({ handleChangeFilter, filter }) => {\n  let inputFilterID = shortid();\n\n  return (\n    <div>\n      <label htmlFor={inputFilterID}>Find contacts by name</label>\n      <input\n        id={inputFilterID}\n        name={filter}\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n      ></input>\n    </div>\n  );\n};\n","import { Component } from 'react';\nimport shortid from 'shortid';\nexport class ContactForm extends Component {\n  inputNameID = shortid();\n  inputNumberID = shortid();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChangeName = e => {\n    this.setState({ name: e.target.value });\n  };\n  handleChangeNumber = e => {\n    this.setState({ number: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    let contact = {\n      id: shortid(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    if (this.state.name && this.state.number) {\n      this.setState({ contact });\n      this.props.searchDuplicate(contact);\n      // this.props.addNewContact(contact);\n      this.setState({ name: '', number: '' });\n    }\n    return;\n  };\n\n  render() {\n    let {\n      handleSubmit,\n      inputNameID,\n      inputNumberID,\n      handleChangeName,\n      handleChangeNumber,\n    } = this;\n    let { name, number } = this.state;\n    return (\n      <section>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor={inputNameID}>Names</label>\n          <input\n            id={inputNameID}\n            name={name}\n            type=\"text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Ім'я включає букви, при потребі : апостроф, тире і пробіли\"\n            value={name}\n            onChange={handleChangeName}\n          ></input>\n\n          <label htmlFor={inputNumberID}>Number</label>\n          <input\n            id={inputNumberID}\n            name={number}\n            type=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            tittle=\"обов'язково цифри! при потребі '+' , '-', '()'\"\n            value={number}\n            placeholder=\"XXX-XX-XX\"\n            onChange={handleChangeNumber}\n          ></input>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </section>\n    );\n  }\n}\n","export const ContactList = ({ children }) => {\n  return (\n    { children } && (\n      <section>\n        <ul>{children}</ul>\n      </section>\n    )\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const ContactListItem = ({ filter, contacts, deleteItem }) => {\n  return (\n    <>\n      {filter === ''\n        ? contacts.map(({ name, number, id }) => (\n            <li key={id}>\n              <p>\n                {name} : {number}\n              </p>\n              <button type=\"button\" onClick={() => deleteItem(id)}>\n                Delete\n              </button>\n            </li>\n          ))\n        : contacts.map(\n            ({ name, number, id }) =>\n              name.toLowerCase().includes(filter.toLowerCase()) && (\n                <li key={id}>\n                  <p>\n                    {name} : {number}\n                  </p>\n                  <button type=\"button\" onClick={() => deleteItem(id)}>\n                    Delete\n                  </button>\n                </li>\n              ),\n          )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.array,\n  deleteItem: PropTypes.func,\n};\n","import { Component } from 'react';\nimport './App.css';\nimport { Filter } from './components/Filter/Filter';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { ContactListItem } from './components/ContactListItem/ContactListItem';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    let localeContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (localeContacts) {\n      this.setState({ contacts: localeContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = obj => {\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, obj],\n      };\n    });\n  };\n\n  searchDuplicate = value => {\n    const names = this.state.contacts.map(contact => contact.name);\n    names.includes(value.name)\n      ? alert(`${value.name} is already in contacts!!!`)\n      : this.addNewContact(value);\n  };\n\n  handleChangeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  deleteItem = itemId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== itemId),\n    }));\n  };\n\n  render() {\n    let { addNewContact, searchDuplicate, handleChangeFilter, deleteItem } =\n      this;\n    let { contacts, filter } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          addNewContact={addNewContact}\n          searchDuplicate={searchDuplicate}\n          contacts={contacts}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleChangeFilter={handleChangeFilter} />\n        <ContactList>\n          <ContactListItem\n            contacts={contacts}\n            filter={filter}\n            deleteItem={deleteItem}\n          />\n        </ContactList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}